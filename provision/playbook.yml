- name: Vagrant JVM apps development standard
  hosts: all
  user: vagrant
  become: yes
  gather_facts: yes

  tasks:

    - name: Install essential apps and tools
      apt:
        name: '{{ item }}'
        state: present
        update-cache: yes
      with_items:
        - htop
        - curl
        - vim
        - lsof
        - postgresql-client
      become: yes


      # Python3
      # =======
    - name: Python3 - Install pip3 & Virtual env
      apt:
        name: '{{ item }}'
        force: yes
        state: present
      with_items:
        - python3-pip
      become: yes
      tags: python3

    - name: Python3 - Make python3 alias
      blockinfile:
        state: present
        path: "/home/vagrant/.bashrc"
        insertafter: EOF
        block: |
          alias python=python3
          alias py=python3
          alias pip=pip3
      become: no
      tags: python3
      # END - Python Utils ===============


      # Install OpenJDK 8
      # =================
    - name: OpenJDK-8 - Add Java repository to sources
      apt_repository:
        repo: 'ppa:openjdk-r/ppa'
      tags: openjdk-8

    - name: OpenJDK-8 - Update APT package cache
      apt:
        update_cache: yes
      run_once: yes
      tags: openjdk-8

    - name: OpenJDK-8 - Install OpenJDK 8
      apt:
        name: openjdk-8-jdk
        force: yes
      become: yes
      tags: openjdk-8

    - name: OpenJDK-8 - Add JAVA_HOME to env vars
      lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^JAVA_HOME"
        line: "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
      tags: openjdk-8
      # END - Install OpenJDK 8 ===============


      # Install Postgresql 10
      # =====================
    - name: Postgresql-10 - Install postgresql database and Dependencies
      apt:
        pkg: "{{ item }}"
        update_cache: yes
        state: present
      with_items:
      - postgresql-10
      - postgresql-contrib-10
      - libpq-dev
      tags: postgresql

    - name: Postgresql-10 - Install postgresql pip dependencies
      pip:
        name: psycopg2
        state: present
      tags: postgresql

    - name: Postgresql-10 - Passwordless login for postgres user
      copy:
        src: "pg_hba_local.conf"
        dest: "/etc/postgresql/10/main/pg_hba.conf"
        owner: postgres
        group: postgres
        mode: 0640
      register: pg_hba
      tags: postgresql

    - name: Postgresql-10 - Add database user
      become_user: postgres
      postgresql_user:
        name: postgres
        role_attr_flags: SUPERUSER
      tags: postgresql

    - name: Postgresql-10 - Enable postgresql to be access from host
      replace:
        path: "/etc/postgresql/10/main/postgresql.conf"
        regexp: "^#listen_addresses = 'localhost'"
        replace: "listen_addresses = '*'"
      become: yes
      tags: postgresql

    - name: Postgresql-10 - Add password login for postgres user
      command: sudo -u postgres psql -c "ALTER USER postgres WITH ENCRYPTED PASSWORD 'postgres';"
      tags: postgresql

    - name: Postgresql-10 - Drop existing database
      command: sudo -u postgres psql -c "DROP DATABASE IF EXISTS demo;"
      tags: postgresql

    - name: Postgresql-10 - Create database
      command: sudo -u postgres psql -c "CREATE DATABASE demo;"
      tags: postgresql

    - name: Postgresql-10 - Create table
      command: sudo -u postgres psql -c "CREATE TABLE IF NOT EXISTS public.persons (id varchar(36) not null, firstname varchar(50), lastname varchar(50),CONSTRAINT persons_pkey PRIMARY KEY (id));"
      tags: postgresql

    - name: Postgresql-10 - Enable and start postgresql
      systemd:
        name: postgresql.service
        enabled: yes
        state: started
      tags: postgresql

    - name: Postgresql-10 - Restart service after customization
      service:
        name: postgresql.service
        state: restarted
      tags: postgresql
      # END - Install Postgresql 10 ===============

    - name: Auto change dir to project root
      lineinfile:
        dest: "/home/vagrant/.bashrc"
        line: "cd /vagrant/"
        insertafter: EOF
      become: no

    - name: Let them know
      debug:
        msg:
          - '===================================================='
          - '|                                                  |'
          - '|            VAGRANT PROVISION FINISHED            |'
          - '|                                                  |'
          - '===================================================='
      become: no
